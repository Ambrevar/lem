#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:dexador) :silent t)
  )

(defpackage :ros.script.gen-desktop.3744816868
  (:use :cl))
(in-package :ros.script.gen-desktop.3744816868)

(defvar *mime-types* '("text/english"
                       "text/plain"
                       "text/x-makefile"
                       "text/x-c++hdr"
                       "text/x-c++src"
                       "text/x-chdr"
                       "text/x-csrc"
                       "text/x-java"
                       "text/x-moc"
                       "text/x-pascal"
                       "text/x-tcl"
                       "text/x-tex"
                       "application/x-shellscript"
                       "text/x-c"
                       "text/x-c++"))

(defun download-icon (name)
  (dex:fetch (format nil "https://raw.githubusercontent.com/Shinmera/lem-icon/gh-pages/icon-~A.svg" name)
             "lem-icon.svg"))

(defun gen-desktop (filename &key explanation command global)
  (with-open-file (o (format nil "~A.desktop" filename)
                     :direction :output
                     :if-exists :supersede)
    (format o "~{~A~%~}" `("[Desktop Entry]"
                           "Version=1.0"
                           ,(format nil "Name=lem ~A (~A)"
                                    (asdf:component-version
                                     (asdf:find-system "lem"))
                                    explanation)
                           "GenericName=Text Editor"
                           "Comment=Common Lisp editor/IDE with high expansibility"
                           ,(format nil "MimeType=~{~A;~}" *mime-types*)
                           ,(format nil "TryExec=~A" (if global
                                                         (format nil "/usr/local/bin/~A" filename)
                                                         (roswell.util:which "ros")))
                           ,(format nil "Exec=~A %F"
                                    (if global
                                        (format nil "~A ~A"
                                                (roswell.util:which "ros")
                                                (roswell.util:which command))
                                        (format nil "/usr/local/bin/~A" filename)))
                           ,(format nil "Icon=~A"
                                    (namestring (merge-pathnames "lem-icon.svg"
                                                                 (if global
                                                                     "/usr/share/lem/icons/"
                                                                     *default-pathname-defaults*))))
                           "Type=Application"
                           "Terminal=true"
                           "Categories=Utility;Development;TextEditor;"
                           "Keywords=Text;Editor;"))))

(defun main (&rest argv)
  (let ((icon (position "--icon" argv :test #'equal))
        (global (find "--global" argv :test #'equal)))
    (when icon
      (setf icon (nth (1+ icon) argv)))
    (setf icon (or icon "blue-shaded"))
    (unless (probe-file "lem-icon.svg")
      (download-icon icon))
    (gen-desktop "lem-ncurses" :explanation "ncurses" :command "lem-ncurses" :global global)
    (gen-desktop "lem-ncurses-ccl" :explanation "ncurses ccl" :command "lem-ncurses-ccl" :global global)))

;;; vim: set ft=lisp lisp:
